openapi: 3.0.1
info:
  title: Setu Addressing API - draft
  description: |
    1. Create payment address such as UPI VPA
    2. Set settlement rules
    3. Pause address
    4. Delete address
    5. Edit settlement rule
  termsOfService: http://seut.co
  contact:
    email: ranjith@setu.co
  version: 1.0.0
externalDocs:
  description: Use case document
  url: https://hackmd.io/UGU6qx7hQOadNcyR7M2meQ?view#Addresses
servers:
- url: https://sandbox.setu.co/api
- url: http://sandbox.setu.co/api
tags:
- name: Addresses
  description: Manage addresses
- name: Notifications
  description: Notifications
  externalDocs:
    description: Read More
    url: https://hackmd.io/UGU6qx7hQOadNcyR7M2meQ?view#Notifications
- name: Beneficiaries
  description: Manage beneficiaries
- name: Collect requests
  description: Send collect requests and receive payment into the address
- name: Transactions
  description: Access transactions per address
- name: Refunds
  description: Refund requests
paths:
  /routes/addresses:
    get:
      tags:
      - Addresses
      description: List addresses
      operationId: listAddresses
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/Address'
                    example:
                      addresses:
                      - ""
                      - ""
                example:
                  data:
                    addresses:
                    - ""
                    - ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Addresses
    post:
      tags:
      - Addresses
      summary: Create a new address
      operationId: createAddress
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        schema:
          type: string
      requestBody:
        description: Address object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAddressRequest'
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        $ref: '#/components/schemas/Address'
                    example:
                      address: ""
                example:
                  data:
                    address: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Addresses
  /routes/addresses/{addressID}:
    get:
      tags:
      - Addresses
      description: Get address
      operationId: getAddress
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        $ref: '#/components/schemas/Address'
                    example:
                      address: ""
                example:
                  data:
                    address: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Addresses
    post:
      tags:
      - Addresses
      description: Update address
      operationId: updateAddressByID
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Address'
        required: false
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        $ref: '#/components/schemas/Address'
                    example:
                      address: ""
                example:
                  data:
                    address: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Addresses
    delete:
      tags:
      - Addresses
      description: Delete address
      operationId: deleteAddress
      parameters:
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                example:
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Addresses
  /<partner-notification-url>:
    post:
      tags:
      - Notifications
      summary: Notifications for credit alert and settlement
      operationId: partnerNotificatian
      requestBody:
        description: Address object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationEventData'
        required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                example:
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Notifications
  /routes/beneficiaries:
    get:
      tags:
      - Beneficiaries
      description: List beneficiaries
      operationId: listBeneficiaries
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      beneficiaries:
                        type: array
                        items:
                          $ref: '#/components/schemas/Beneficiary'
                    example:
                      beneficiaries:
                      - ""
                      - ""
                example:
                  data:
                    beneficiaries:
                    - ""
                    - ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Beneficiaries
    post:
      tags:
      - Beneficiaries
      description: Add beneficiary
      operationId: addBenificiary
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseBeneficiary'
        required: false
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      beneficiary:
                        $ref: '#/components/schemas/Beneficiary'
                    example:
                      beneficiary: ""
                example:
                  data:
                    beneficiary: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Beneficiaries
  /routes/beneficiaries/{benificairyID}:
    get:
      tags:
      - Beneficiaries
      description: Get beneficiary by ID
      operationId: getBenificiaryById
      parameters:
      - name: benificairyID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      beneficiary:
                        $ref: '#/components/schemas/Beneficiary'
                    example:
                      beneficiary: ""
                example:
                  data:
                    beneficiary: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Beneficiaries
    delete:
      tags:
      - Beneficiaries
      description: Delete Beneficiary
      operationId: deleteBeneficiaryByID
      parameters:
      - name: benificairyID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                example:
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Beneficiaries
  /routes/addresses/{addressID}/collectRequests:
    get:
      tags:
      - Collect requests
      description: List collect requests
      operationId: listCollectRequests
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      collectRequests:
                        type: array
                        items:
                          $ref: '#/components/schemas/CollectRequest'
                    example:
                      collectRequests:
                      - ""
                      - ""
                example:
                  data:
                    collectRequests:
                    - ""
                    - ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: CollectRequests
    post:
      tags:
      - Collect requests
      description: Add Collect Request
      operationId: addCollectRequests
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCollectRequest'
        required: false
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      collectRequest:
                        $ref: '#/components/schemas/CollectRequest'
                    example:
                      collectRequest: ""
                example:
                  data:
                    collectRequest: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: CollectRequests
  /routes/addresses/{addressID}/collectRequests/{collectRequestID}:
    get:
      tags:
      - Collect requests
      description: Get beneficiary by ID
      operationId: getCollectRequestById
      parameters:
      - name: collectRequestID
        in: path
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      collectRequest:
                        $ref: '#/components/schemas/CollectRequest'
                    example:
                      collectRequest: ""
                example:
                  data:
                    collectRequest: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: CollectRequests
  /routes/addresses/{addressID}/transactions:
    get:
      tags:
      - Transactions
      description: List transactions
      operationId: listTransactions
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transaction'
                    example:
                      transactions:
                      - amountPaid:
                          value: 6
                          currencyCode: INR
                        platformTransactionRefID: platformTransactionRefID
                        uniquePaymentRefID: uniquePaymentRefID
                        timestamp: timestamp
                      - amountPaid:
                          value: 6
                          currencyCode: INR
                        platformTransactionRefID: platformTransactionRefID
                        uniquePaymentRefID: uniquePaymentRefID
                        timestamp: timestamp
                example:
                  data:
                    transactions:
                    - amountPaid:
                        value: 6
                        currencyCode: INR
                      platformTransactionRefID: platformTransactionRefID
                      uniquePaymentRefID: uniquePaymentRefID
                      timestamp: timestamp
                    - amountPaid:
                        value: 6
                        currencyCode: INR
                      platformTransactionRefID: platformTransactionRefID
                      uniquePaymentRefID: uniquePaymentRefID
                      timestamp: timestamp
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Transactions
  /routes/addresses/{addressID}/transactions/{transactionID}:
    get:
      tags:
      - Transactions
      description: Get beneficiary by ID
      operationId: getTransactionById
      parameters:
      - name: transactionID
        in: path
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      transaction:
                        $ref: '#/components/schemas/Transaction'
                    example:
                      transaction:
                        amountPaid:
                          value: 6
                          currencyCode: INR
                        platformTransactionRefID: platformTransactionRefID
                        uniquePaymentRefID: uniquePaymentRefID
                        timestamp: timestamp
                example:
                  data:
                    transaction:
                      amountPaid:
                        value: 6
                        currencyCode: INR
                      platformTransactionRefID: platformTransactionRefID
                      uniquePaymentRefID: uniquePaymentRefID
                      timestamp: timestamp
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Transactions
  /routes/addresses/{addressID}/refunds:
    get:
      tags:
      - Refunds
      description: List Refund requests
      operationId: listRefunds
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      refunds:
                        type: array
                        items:
                          $ref: '#/components/schemas/Refund'
                    example:
                      refunds:
                      - ""
                      - ""
                example:
                  data:
                    refunds:
                    - ""
                    - ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Refunds
    post:
      tags:
      - Refunds
      description: create a refund request
      operationId: addRefund
      parameters:
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseRefund'
        required: false
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      refund:
                        $ref: '#/components/schemas/Refund'
                    example:
                      refund: ""
                example:
                  data:
                    refund: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Refunds
  /routes/addresses/{addressID}/refunds/{refundID}:
    get:
      tags:
      - Refunds
      description: Get refund by ID
      operationId: getRefundById
      parameters:
      - name: refundID
        in: path
        required: true
        schema:
          type: string
      - name: addressID
        in: path
        required: true
        schema:
          type: string
      - name: X-PRODUCT-INSTANCE-ID
        in: header
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      refund:
                        $ref: '#/components/schemas/Refund'
                    example:
                      refund: ""
                example:
                  data:
                    refund: ""
                  success: true
                  status: 0
                x-content-type: application/json
      security:
      - Bearer: []
      x-swagger-router-controller: Refunds
components:
  schemas:
    SettlementRule:
      type: object
      properties:
        beneficiaryID:
          type: string
        default:
          type: boolean
          default: false
        charge:
          type: boolean
          default: false
    SettlementConfig:
      type: object
      properties:
        rules:
          type: array
          items:
            $ref: '#/components/schemas/SettlementRule'
        settlementType:
          type: string
          description: The type of settlement to be used
          enum:
          - PERCENTAGE
          - FLAT
    BaseAddress:
      type: object
      properties:
        type:
          type: string
          enum:
          - VPA
          - VAN
    BaseAddressWithID:
      allOf:
      - type: object
        properties:
          id:
            type: string
          identifier:
            type: string
          status:
            type: string
            enum:
            - ACTIVE
            - INACTIVE
            - RETIRED
      - $ref: '#/components/schemas/BaseAddress'
    BaseAddressRequest:
      allOf:
      - $ref: '#/components/schemas/BaseAddress'
      - type: object
        properties:
          settlementDirective:
            $ref: '#/components/schemas/SettlementConfig'
    Address:
      allOf:
      - $ref: '#/components/schemas/BaseAddressWithID'
      - $ref: '#/components/schemas/BaseAddressRequest'
    BaseBeneficiary:
      type: object
      properties:
        demographics:
          type: object
          properties:
            type:
              type: string
              description: Account holder type
              enum:
              - INDIVIDUAL
              - SOLE_PROPRIETORSHIP
              - LLP
              - LTD
            address:
              type: string
            accountHolderName:
              type: string
        account:
          type: object
          properties:
            ifsc:
              type: string
            accountNumber:
              type: string
    Beneficiary:
      allOf:
      - type: object
        properties:
          id:
            type: string
      - $ref: '#/components/schemas/BaseBeneficiary'
    Amount:
      type: object
      properties:
        value:
          type: integer
        currencyCode:
          type: string
          enum:
          - INR
      example:
        value: 6
        currencyCode: INR
    BaseCollectRequest:
      type: object
      properties:
        payerDetails:
          type: object
          properties:
            type:
              type: string
              description: Account holder type
              enum:
              - VPA
            address:
              type: string
            accountHolderName:
              type: string
        amount:
          $ref: '#/components/schemas/Amount'
        notes:
          type: string
    CollectRequest:
      allOf:
      - type: object
        properties:
          id:
            type: string
          status:
            type: string
            enum:
            - PENDING
            - SUCCESS
            - REJECTED
            - INVALID_TARGET
          platformTransactionRefID:
            type: string
      - $ref: '#/components/schemas/BaseCollectRequest'
    BaseRefund:
      type: object
      properties:
        platformTransactionRefID:
          type: string
    RefundRejectReason:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    Refund:
      allOf:
      - type: object
        properties:
          id:
            type: string
          status:
            type: string
            enum:
            - PENDING
            - SUCCESS
            - REJECTED
          rejectReason:
            $ref: '#/components/schemas/RefundRejectReason'
      - $ref: '#/components/schemas/BaseRefund'
    Transaction:
      type: object
      properties:
        platformTransactionRefID:
          type: string
        uniquePaymentRefID:
          type: string
        timestamp:
          type: string
        amountPaid:
          $ref: '#/components/schemas/Amount'
      example:
        amountPaid:
          value: 6
          currencyCode: INR
        platformTransactionRefID: platformTransactionRefID
        uniquePaymentRefID: uniquePaymentRefID
        timestamp: timestamp
    CreditNotificationEventBody:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BaseAddressWithID'
        transaction:
          $ref: '#/components/schemas/Transaction'
    CreditNotificationEventData:
      type: object
      properties:
        eventType:
          type: string
          enum:
          - CREDIT
        eventData:
          $ref: '#/components/schemas/CreditNotificationEventBody'
    Payout:
      allOf:
      - type: object
        properties:
          benificiaryID:
            type: string
      - $ref: '#/components/schemas/Transaction'
    SettlementSummary:
      type: object
      properties:
        count:
          type: integer
        between:
          type: object
          properties:
            start:
              type: string
            end:
              type: string
        amountSettled:
          $ref: '#/components/schemas/Amount'
        amountReceived:
          $ref: '#/components/schemas/Amount'
        processingCharge:
          $ref: '#/components/schemas/Amount'
    SettlementNotificationEventBody:
      type: object
      properties:
        id:
          type: string
        sumamry:
          $ref: '#/components/schemas/SettlementSummary'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        payouts:
          type: array
          items:
            $ref: '#/components/schemas/Payout'
    NotificationEventData:
      type: object
      properties:
        eventType:
          type: string
          enum:
          - SETTLEMENT
          - CREDIT
        eventData:
          type: object
          properties: {}
    SettlementNotificationEventData:
      type: object
      properties:
        eventType:
          type: string
          enum:
          - SETTLEMENT
        eventData:
          $ref: '#/components/schemas/SettlementNotificationEventBody'
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
